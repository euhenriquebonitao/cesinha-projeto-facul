import 'package:challenge_vision/models/project.dart';
import 'package:challenge_vision/services/ai_knowledge_service.dart';

/// Servi√ßo para gerenciar templates de prompts avan√ßados para a IA
class AIPromptService {
  
  /// Gera um prompt personalizado baseado no contexto e tipo de pergunta
  static String generateContextualPrompt({
    required String userQuestion,
    required List<Project> projects,
    required String conversationHistory,
    Map<String, dynamic>? additionalContext,
  }) {
    final questionType = _analyzeQuestionType(userQuestion);
    final projectContext = _analyzeProjectContext(userQuestion, projects);
    final urgency = _analyzeUrgency(userQuestion);
    
    return _buildPrompt(
      questionType: questionType,
      projectContext: projectContext,
      urgency: urgency,
      userQuestion: userQuestion,
      projects: projects,
      conversationHistory: conversationHistory,
      additionalContext: additionalContext,
    );
  }

  /// Analisa o tipo de pergunta do usu√°rio
  static QuestionType _analyzeQuestionType(String question) {
    final lowerQuestion = question.toLowerCase();
    
    if (lowerQuestion.contains('risco') || lowerQuestion.contains('problema') || lowerQuestion.contains('atraso')) {
      return QuestionType.riskAnalysis;
    } else if (lowerQuestion.contains('recomenda√ß√£o') || lowerQuestion.contains('sugest√£o') || lowerQuestion.contains('como melhorar')) {
      return QuestionType.recommendation;
    } else if (lowerQuestion.contains('status') || lowerQuestion.contains('progresso') || lowerQuestion.contains('andamento')) {
      return QuestionType.statusUpdate;
    } else if (lowerQuestion.contains('categoria') || lowerQuestion.contains('tipo') || lowerQuestion.contains('classifica√ß√£o')) {
      return QuestionType.categorization;
    } else if (lowerQuestion.contains('tecnologia') || lowerQuestion.contains('tech') || lowerQuestion.contains('ferramenta')) {
      return QuestionType.technology;
    } else if (lowerQuestion.contains('prazo') || lowerQuestion.contains('cronograma') || lowerQuestion.contains('data')) {
      return QuestionType.timeline;
    } else if (lowerQuestion.contains('recursos') || lowerQuestion.contains('or√ßamento') || lowerQuestion.contains('custo')) {
      return QuestionType.resources;
    } else if (lowerQuestion.contains('equipe') || lowerQuestion.contains('respons√°vel') || lowerQuestion.contains('pessoa')) {
      return QuestionType.team;
    } else if (lowerQuestion.contains('an√°lise') || lowerQuestion.contains('insight') || lowerQuestion.contains('estat√≠stica')) {
      return QuestionType.analytics;
    } else {
      return QuestionType.general;
    }
  }

  /// Analisa o contexto dos projetos mencionados na pergunta
  static ProjectContext _analyzeProjectContext(String question, List<Project> projects) {
    final lowerQuestion = question.toLowerCase();
    final mentionedProjects = <Project>[];
    
    for (final project in projects) {
      if (lowerQuestion.contains(project.name.toLowerCase()) ||
          lowerQuestion.contains(project.category.toLowerCase()) ||
          lowerQuestion.contains(project.technology.toLowerCase())) {
        mentionedProjects.add(project);
      }
    }
    
    if (mentionedProjects.isEmpty) {
      return ProjectContext.allProjects;
    } else if (mentionedProjects.length == 1) {
      return ProjectContext.singleProject;
    } else {
      return ProjectContext.multipleProjects;
    }
  }

  /// Analisa a urg√™ncia da pergunta
  static UrgencyLevel _analyzeUrgency(String question) {
    final lowerQuestion = question.toLowerCase();
    
    if (lowerQuestion.contains('urgente') || lowerQuestion.contains('cr√≠tico') || lowerQuestion.contains('emerg√™ncia')) {
      return UrgencyLevel.critical;
    } else if (lowerQuestion.contains('importante') || lowerQuestion.contains('prioridade') || lowerQuestion.contains('r√°pido')) {
      return UrgencyLevel.high;
    } else if (lowerQuestion.contains('quando') || lowerQuestion.contains('quanto tempo') || lowerQuestion.contains('prazo')) {
      return UrgencyLevel.medium;
    } else {
      return UrgencyLevel.low;
    }
  }

  /// Constr√≥i o prompt final baseado na an√°lise
  static String _buildPrompt({
    required QuestionType questionType,
    required ProjectContext projectContext,
    required UrgencyLevel urgency,
    required String userQuestion,
    required List<Project> projects,
    required String conversationHistory,
    Map<String, dynamic>? additionalContext,
  }) {
    final buffer = StringBuffer();
    
    // Cabe√ßalho do prompt
    buffer.writeln("=== CHALLENGEBOT - ASSISTENTE ESPECIALIZADO EM GEST√ÉO DE PROJETOS FARMAC√äUTICOS ===");
    buffer.writeln("Empresa: Eurofarma");
    buffer.writeln("Vers√£o da Base de Conhecimento: ${AIKnowledgeService.knowledgeBaseVersion}");
    buffer.writeln("Data/Hora: ${DateTime.now().toIso8601String()}");
    buffer.writeln();
    
    // Contexto de urg√™ncia
    buffer.writeln("=== N√çVEL DE URG√äNCIA ===");
    switch (urgency) {
      case UrgencyLevel.critical:
        buffer.writeln("üö® CR√çTICO: Esta pergunta requer aten√ß√£o imediata e resposta priorit√°ria.");
        break;
      case UrgencyLevel.high:
        buffer.writeln("‚ö†Ô∏è ALTA PRIORIDADE: Esta pergunta √© importante e deve ser respondida com foco.");
        break;
      case UrgencyLevel.medium:
        buffer.writeln("üìã M√âDIA PRIORIDADE: Esta pergunta tem prazo definido e deve ser bem estruturada.");
        break;
      case UrgencyLevel.low:
        buffer.writeln("‚ÑπÔ∏è BAIXA PRIORIDADE: Esta pergunta pode ser respondida de forma mais detalhada.");
        break;
    }
    buffer.writeln();
    
    // Instru√ß√µes espec√≠ficas por tipo de pergunta
    buffer.writeln("=== INSTRU√á√ïES ESPEC√çFICAS ===");
    buffer.writeln(_getQuestionTypeInstructions(questionType));
    buffer.writeln();
    
    // Contexto dos projetos
    buffer.writeln("=== CONTEXTO DOS PROJETOS ===");
    buffer.writeln(_getProjectContextInstructions(projectContext, projects));
    buffer.writeln();
    
    // Hist√≥rico de conversas
    if (conversationHistory.isNotEmpty) {
      buffer.writeln("=== HIST√ìRICO DE CONVERSAS ===");
      buffer.writeln(conversationHistory);
      buffer.writeln();
    }
    
    // Dados enriquecidos dos projetos
    buffer.writeln("=== DADOS ENRIQUECIDOS DOS PROJETOS ===");
    buffer.writeln(AIKnowledgeService.generateEnrichedContext(projects));
    buffer.writeln();
    
    // Contexto adicional
    if (additionalContext != null && additionalContext.isNotEmpty) {
      buffer.writeln("=== CONTEXTO ADICIONAL ===");
      additionalContext.forEach((key, value) {
        buffer.writeln("$key: $value");
      });
      buffer.writeln();
    }
    
    // Instru√ß√µes finais
    buffer.writeln("=== INSTRU√á√ïES FINAIS ===");
    buffer.writeln("1. Responda de forma clara, objetiva e acion√°vel");
    buffer.writeln("2. Use dados espec√≠ficos dos projetos quando relevante");
    buffer.writeln("3. Forne√ßa recomenda√ß√µes pr√°ticas baseadas nas melhores pr√°ticas da Eurofarma");
    buffer.writeln("4. Seja proativo em identificar riscos e oportunidades");
    buffer.writeln("5. Mantenha o foco nos objetivos estrat√©gicos da empresa");
    buffer.writeln("6. Use linguagem profissional mas acess√≠vel");
    buffer.writeln();
    
    // Pergunta do usu√°rio
    buffer.writeln("=== PERGUNTA DO USU√ÅRIO ===");
    buffer.writeln(userQuestion);
    
    return buffer.toString();
  }

  /// Obt√©m instru√ß√µes espec√≠ficas baseadas no tipo de pergunta
  static String _getQuestionTypeInstructions(QuestionType type) {
    switch (type) {
      case QuestionType.riskAnalysis:
        return """
Foque em:
- Identificar riscos espec√≠ficos nos projetos mencionados
- Avaliar probabilidade e impacto de cada risco
- Propor planos de mitiga√ß√£o concretos
- Sugerir indicadores de monitoramento
- Alertar sobre riscos cr√≠ticos que requerem a√ß√£o imediata
""";
      case QuestionType.recommendation:
        return """
Foque em:
- Fornecer recomenda√ß√µes espec√≠ficas e acion√°veis
- Justificar cada recomenda√ß√£o com dados dos projetos
- Priorizar recomenda√ß√µes por impacto e facilidade de implementa√ß√£o
- Sugerir cronograma de implementa√ß√£o
- Identificar recursos necess√°rios
""";
      case QuestionType.statusUpdate:
        return """
Foque em:
- Analisar o status atual dos projetos
- Identificar projetos em atraso ou com problemas
- Sugerir a√ß√µes para acelerar projetos lentos
- Destacar projetos que est√£o indo bem
- Propor melhorias no acompanhamento
""";
      case QuestionType.categorization:
        return """
Foque em:
- Analisar a distribui√ß√£o de projetos por categoria
- Identificar desequil√≠brios no portf√≥lio
- Sugerir reclassifica√ß√µes se necess√°rio
- Propor estrat√©gias por categoria
- Destacar sinergias entre categorias
""";
      case QuestionType.technology:
        return """
Foque em:
- Analisar o uso de tecnologias nos projetos
- Identificar oportunidades de padroniza√ß√£o
- Sugerir tecnologias emergentes relevantes
- Avaliar maturidade tecnol√≥gica
- Propor estrat√©gias de capacita√ß√£o
""";
      case QuestionType.timeline:
        return """
Foque em:
- Analisar cronogramas e prazos
- Identificar projetos em risco de atraso
- Sugerir otimiza√ß√µes de cronograma
- Propor marcos intermedi√°rios
- Alertar sobre depend√™ncias cr√≠ticas
""";
      case QuestionType.resources:
        return """
Foque em:
- Analisar aloca√ß√£o de recursos
- Identificar gargalos de recursos
- Sugerir otimiza√ß√µes de or√ßamento
- Propor redistribui√ß√£o de recursos
- Avaliar ROI dos investimentos
""";
      case QuestionType.team:
        return """
Foque em:
- Analisar composi√ß√£o das equipes
- Identificar gaps de compet√™ncias
- Sugerir treinamentos necess√°rios
- Propor reorganiza√ß√µes de equipe
- Destacar l√≠deres de projeto
""";
      case QuestionType.analytics:
        return """
Foque em:
- Fornecer insights baseados em dados
- Identificar tend√™ncias e padr√µes
- Sugerir m√©tricas de acompanhamento
- Propor dashboards e relat√≥rios
- Destacar oportunidades de melhoria
""";
      case QuestionType.general:
        return """
Foque em:
- Fornecer uma resposta abrangente e √∫til
- Conectar a pergunta aos dados dos projetos
- Oferecer insights adicionais relevantes
- Sugerir pr√≥ximos passos
- Manter o foco nos objetivos da Eurofarma
""";
    }
  }

  /// Obt√©m instru√ß√µes baseadas no contexto dos projetos
  static String _getProjectContextInstructions(ProjectContext context, List<Project> projects) {
    switch (context) {
      case ProjectContext.allProjects:
        return """
Contexto: An√°lise de todos os ${projects.length} projetos do portf√≥lio.
- Considere o portf√≥lio como um todo
- Identifique padr√µes e tend√™ncias gerais
- Forne√ßa insights estrat√©gicos
- Sugira otimiza√ß√µes globais
""";
      case ProjectContext.singleProject:
        return """
Contexto: Foco em um projeto espec√≠fico mencionado na pergunta.
- Analise detalhadamente o projeto espec√≠fico
- Forne√ßa insights profundos sobre este projeto
- Sugira melhorias espec√≠ficas
- Identifique riscos e oportunidades particulares
""";
      case ProjectContext.multipleProjects:
        return """
Contexto: An√°lise de m√∫ltiplos projetos mencionados na pergunta.
- Compare os projetos mencionados
- Identifique similaridades e diferen√ßas
- Sugira sinergias entre os projetos
- Proponha estrat√©gias coordenadas
""";
    }
  }

  /// Gera prompt para an√°lise de tend√™ncias
  static String generateTrendAnalysisPrompt(List<Project> projects) {
    return """
Voc√™ √© um analista s√™nior especializado em tend√™ncias de projetos farmac√™uticos.

Analise os seguintes aspectos dos projetos fornecidos:
1. Tend√™ncias por categoria ao longo do tempo
2. Padr√µes de uso de tecnologias
3. Distribui√ß√£o de status e sua evolu√ß√£o
4. Correla√ß√µes entre vari√°veis (categoria vs. tecnologia, status vs. prazo, etc.)
5. Identifica√ß√£o de outliers e projetos excepcionais
6. Previs√µes baseadas em tend√™ncias atuais

Forne√ßa insights acion√°veis e recomenda√ß√µes estrat√©gicas baseadas na an√°lise de tend√™ncias.
""";
  }

  /// Gera prompt para an√°lise de performance
  static String generatePerformanceAnalysisPrompt(List<Project> projects) {
    return """
Voc√™ √© um especialista em an√°lise de performance de projetos farmac√™uticos.

Analise os seguintes indicadores de performance:
1. Taxa de conclus√£o por categoria
2. Tempo m√©dio de execu√ß√£o por tipo de projeto
3. Efici√™ncia de uso de tecnologias
4. Performance por √°rea respons√°vel
5. Correla√ß√£o entre rating e outros indicadores
6. Identifica√ß√£o de projetos de alta performance

Forne√ßa recomenda√ß√µes para replicar sucessos e melhorar performance geral.
""";
  }
}

/// Enum para tipos de pergunta
enum QuestionType {
  riskAnalysis,
  recommendation,
  statusUpdate,
  categorization,
  technology,
  timeline,
  resources,
  team,
  analytics,
  general,
}

/// Enum para contexto dos projetos
enum ProjectContext {
  allProjects,
  singleProject,
  multipleProjects,
}

/// Enum para n√≠vel de urg√™ncia
enum UrgencyLevel {
  critical,
  high,
  medium,
  low,
}
